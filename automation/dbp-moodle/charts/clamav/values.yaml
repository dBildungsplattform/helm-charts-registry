# Default values for clamav.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.gitlab.com/xrow-public/helm-clamav/clamav
  pullPolicy: Always
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

settings:
  debug: no

kubectl:
  image:
    repository: registry.gitlab.com/xrow-public/helm-clamav/kubectl
    pullPolicy: IfNotPresent
    tag: 1.4.12

test:
  image:
    repository: registry.gitlab.com/xrow-public/helm-clamav/test
    pullPolicy: IfNotPresent
    tag: 1.4.12

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

## Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param provisioning.containerSecurityContext.enabled Enable container Security Context
## @param provisioning.containerSecurityContext.runAsUser User ID for the container
## @param provisioning.containerSecurityContext.runAsNonRoot Avoid running as root User
##

securityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
  allowPrivilegeEscalation: false
  capabilities:
    drop: 
    - "ALL"

service:
  type: ClusterIP
  port: 3310

resources:
  requests:
    cpu: 50m
    memory: 128Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  exec:
    command:
      - /bin/bash
      - -c
      - |
        echo 'PING' | nc 127.0.0.1 3310 | grep -i PONG
readinessProbe:
  exec:
    command:
      - /bin/bash
      - -c
      - |
        echo 'PING' | nc 127.0.0.1 3310 | grep -i PONG
startupProbe:
  failureThreshold: 30
  periodSeconds: 10
  exec:
    command:
      - /bin/bash
      - -c
      - |
        echo 'PING' | nc 127.0.0.1 3310 | grep -i PONG
podDisruptionBudget:
  enabled: false
  minAvailable: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector:
  kubernetes.io/os: linux

tolerations: []

affinity: {}
